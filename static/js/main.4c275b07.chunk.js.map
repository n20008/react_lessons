{"version":3,"sources":["components/Header.js","components/AnimeCard.js","components/MainContent.js","App.jsx","reportWebVitals.js","index.js"],"names":["Header","AnimeCard","anime","href","url","target","rel","src","image_url","alt","title","MainContent","props","onSubmit","HandleSearch","type","placeholder","required","value","search","onChange","e","SetSearch","animeList","map","mal_id","App","useState","SetAnimeList","FetchAnime","query","a","fetch","then","res","json","temp","results","preventDefault","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAQeA,MARf,WACE,OACE,iCACE,yECYSC,MAbf,YAAgC,IAAVC,EAAS,EAATA,MACpB,OACE,kCACE,oBAAGC,KAAMD,EAAME,IAAKC,OAAO,SAASC,IAAI,aAAxC,UACE,iCACE,qBAAKC,IAAKL,EAAMM,UAAWC,IAAI,kBAEjC,6BAAKP,EAAMQ,cCiBJC,MAvBf,SAAsBC,GACpB,OACE,iCACE,8BACE,sBAAMC,SAAUD,EAAME,aAAtB,SACE,uBACEC,KAAK,SACLC,YAAY,6CACZC,UAAQ,EACRC,MAAON,EAAMO,OACbC,SAAU,SAAAC,GAAC,OAAIT,EAAMU,UAAUD,EAAEhB,OAAOa,cAI9C,8BACGN,EAAMW,UAAUC,KAAI,SAAAtB,GAAK,OACxB,cAAC,EAAD,CAAWA,MAAOA,GAAYA,EAAMuB,iBCkB/BC,MAjCf,WAAiB,IAAD,EACoBC,mBAAS,IAD7B,mBACPJ,EADO,KACIK,EADJ,OAEcD,mBAAS,IAFvB,mBAEPR,EAFO,KAECG,EAFD,KAURO,EAAU,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEACEC,MAAM,2CAAD,OACqBF,EADrB,sCAEtBG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAHD,OACXC,EADW,OAKjBR,EAAaQ,EAAKC,SALD,2CAAH,sDAQhB,OACE,gCACE,cAAC,EAAD,IACA,8BACE,cAAC,EAAD,CACEvB,aAnBa,SAAAO,GACnBA,EAAEiB,iBAEFT,EAAWV,IAiBLA,OAAQA,EACRG,UAAWA,EACXC,UAAWA,UClBNgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4c275b07.chunk.js","sourcesContent":["function Header () {\n  return (\n    <header>\n      <h1>アニメサーチ</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction AnimeCard ({ anime }) {\n  return (\n    <article>\n      <a href={anime.url} target='_blank' rel='noreferrer'>\n        <figure>\n          <img src={anime.image_url} alt='Anime Image' />\n        </figure>\n        <h3>{anime.title}</h3>\n      </a>\n    </article>\n  )\n}\n\nexport default AnimeCard\n","import React from 'react'\nimport AnimeCard from './AnimeCard'\n\nfunction MainContent (props) {\n  return (\n    <main>\n      <div>\n        <form onSubmit={props.HandleSearch}>\n          <input\n            type='search'\n            placeholder='タイトルを入力'\n            required\n            value={props.search}\n            onChange={e => props.SetSearch(e.target.value)}\n          />\n        </form>\n      </div>\n      <div>\n        {props.animeList.map(anime => (\n          <AnimeCard anime={anime} key={anime.mal_id} />\n        ))}\n      </div>\n    </main>\n  )\n}\n\nexport default MainContent\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport MainContent from './components/MainContent'\n\nfunction App () {\n  const [animeList, SetAnimeList] = useState([])\n  const [search, SetSearch] = useState('')\n\n  const HandleSearch = e => {\n    e.preventDefault()\n\n    FetchAnime(search)\n  }\n\n  const FetchAnime = async query => {\n    const temp = await fetch(\n      `https://api.jikan.moe/v3/search/anime?q=${query}&order_by=title&sort=asc&limit=10`\n    ).then(res => res.json())\n\n    SetAnimeList(temp.results)\n  }\n\n  return (\n    <div>\n      <Header />\n      <div>\n        <MainContent\n          HandleSearch={HandleSearch}\n          search={search}\n          SetSearch={SetSearch}\n          animeList={animeList}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}